/*
 * generated by Xtext 2.10.0
 */
package hu.elte.txtuml.xd.generator

//import hu.elte.txtuml.xd.xDiagramDefinition.PackageDeclaration
//import javax.inject.Inject
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
//import org.eclipse.xtext.naming.IQualifiedNameProvider
//import java.util.ArrayList
//import hu.elte.txtuml.xd.xDiagramDefinition.DiagramSignature
//import org.eclipse.xtext.xtype.XImportDeclaration

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class XDiagramDefinitionGenerator extends AbstractGenerator {

//	@Inject extension IQualifiedNameProvider
	
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
//		// debug
//		for (e : resource.allContents.toIterable){
//			println("pc: " + e);
//		}
//
//		// package declaration
//		var packageName = null as String;
//		for (e : resource.allContents.toIterable.filter(PackageDeclaration)){
//			packageName = e.name;
//		}
//	
//		// imports
//		var imports = new ArrayList<XImportDeclaration>();		
//		for (e : resource.allContents.toIterable.filter(XImportDeclaration)){
//			imports.add(e);
//		}
//		
//		// diagram signature
//		var signature = null as DiagramSignature;
//		for (e : resource.allContents.toIterable.filter(DiagramSignature)){
//			signature = e as DiagramSignature;
//		}
//			
//		// TODO: instruction compilation in separate files 
		
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(typeof(Greeting))
//				.map[name]
//				.join(', '))
	}
}
